<div id="jason-hall" class="speaker">
  <div class="speaker-photo">
    <img class="speaker-image" src="{{site.url}}/images/speakers/2023/jason_hall.jpg" alt="Jason Hall" width="150"/>
  </div>

  <div class="speaker-details">

    <h3 class="speaker-name">Jason Hall</h3>

    <p class="speaker-bio">
      <a href="https://twitter.com/imjasonh" target="_blank">Jason Hall</a> 
      is a professional container image nerd at Chainguard, building tools to build and manage container images, and services to move them around better and faster. He lives in Brooklyn with his wife and kids, and enjoys eating pizza more than you think. No, even more. üçï    
    </p>

    <h3 class="talk-title">ko: The only good way to build Go containers</h3>

    <p class="talk-description">
      ko containerizes Go applications more easily, more securely, and more fasterly than docker build, 
      with no need to write a Dockerfile. If you can run go build, you can use ko to build and push a container image. 
      It even generates high quality build-time SBOMs. 
      It integrates with Kubernetes and even Terraform, if that‚Äôs your thing. 
      It was recently accepted into the CNCF, which is kinda nice.
    </p>

    <p class="talk-description">
      By focusing only on building Go container apps, 
      ko is able to take advantage of Go‚Äôs great tooling and ecosystem to make the best, smallest, most secure container images possible.
    </p>

    <p class="talk-description">
      If you stay to the end I‚Äôll even talk about some future experimental work that might already have shipped by the time the talk happens! Time is weird.    
    </p>
  </div>
  
</div>
